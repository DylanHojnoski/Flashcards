{"ast":null,"code":"import _asyncToGenerator from \"/home/dylanh/Documents/CodeProjects/Flashcards/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { User } from 'src/app/models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AccountComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AccountComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleEdit());\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AccountComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\");\n    i0.ɵɵtext(6, \"Logout\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Username: \", ctx_r1.currentUser.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Email: \", ctx_r1.currentUser.email, \" \");\n  }\n}\n\nfunction AccountComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Username already taken \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AccountComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AccountComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editUser.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AccountComponent_div_3_div_2_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementStart(3, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.saveEdit(ctx_r8.currentUser));\n    });\n    i0.ɵɵtext(4, \"Save\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.editUser.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nameTaken);\n  }\n}\n\nexport class AccountComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.currentUser = new User();\n    this.editUser = new User();\n    this.editActive = false;\n    this.nameTaken = false;\n    this.emailTaken = false;\n  }\n\n  ngOnInit() {\n    this.userService.GetCurrentUser().subscribe(result => this.currentUser = result);\n    this.editUser = this.currentUser;\n  }\n\n  toggleEdit() {\n    this.editActive = !this.editActive;\n  }\n\n  getUserName(user) {\n    this.userService.GetUserByName(user).subscribe(result => {\n      user = result;\n    });\n    return new Promise(resolve => {\n      resolve(user);\n    });\n  }\n\n  saveEdit(user) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.currentUser.name == \"\" && _this.currentUser.email == \"\") {\n        return;\n      }\n\n      let existingUser = new User();\n      let userFound = false;\n      existingUser = yield _this.getUserName(_this.currentUser);\n\n      if (existingUser != null) {\n        userFound = true;\n      }\n      /*await this.userService.GetUserByName(this.currentUser).subscribe(result => {\n          existingUser = result\n          console.log(\"1 \" + existingUser);\n          if (result != null) {\n              userFound = true;\n          }\n      });*/\n\n\n      console.log(\"Name: \" + existingUser.name);\n\n      if (userFound && _this.editUser.name == existingUser.name && _this.currentUser.id != existingUser.id) {\n        _this.nameTaken = true;\n        console.log(\"name taken\");\n        return;\n      }\n\n      _this.editUser.id = _this.currentUser.id;\n      _this.editUser.email = _this.currentUser.email;\n\n      _this.userService.UpdateUser(_this.editUser).subscribe();\n\n      console.log(\"updated\");\n      _this.currentUser.name = _this.editUser.name;\n\n      _this.toggleEdit();\n    })();\n  }\n\n}\n\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\n\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"click\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Username\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, AccountComponent_button_1_Template, 2, 0, \"button\", 0);\n      i0.ɵɵtemplate(2, AccountComponent_div_2_Template, 7, 2, \"div\", 1);\n      i0.ɵɵtemplate(3, AccountComponent_div_3_Template, 5, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editActive);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editActive);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editActive);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2NvdW50LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["User","i0","AccountComponent","constructor","userService","ngOnInit","GetCurrentUser","subscribe","result","currentUser","editUser","toggleEdit","editActive","getUserName","user","GetUserByName","Promise","resolve","saveEdit","name","email","existingUser","userFound","console","log","id","nameTaken","UpdateUser","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/dylanh/Documents/CodeProjects/Flashcards/ClientApp/src/app/components/account/account.component.ts","/home/dylanh/Documents/CodeProjects/Flashcards/ClientApp/src/app/components/account/account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  currentUser: User = new User;\n  editUser: User = new User;\n  constructor(private userService: UserService) { }\n  editActive = false;\n  nameTaken = false;\n  emailTaken = false;\n\n  ngOnInit(): void {\n    this.userService.GetCurrentUser().subscribe(result => this.currentUser = result);\n    this.editUser = this.currentUser;\n  }\n\n  toggleEdit() {\n    this.editActive = !this.editActive;\n  }\n\n  getUserName(user: User): Promise<User> {\n      this.userService.GetUserByName(user).subscribe(result => {user = result});\n      return new Promise<User>(resolve => {resolve(user)});\n  }\n\n  async saveEdit(user: User) {\n      if (this.currentUser.name == \"\" && this.currentUser.email == \"\") {\n          return;\n      }\n      let existingUser: User = new User;\n      let userFound = false;\n\n      existingUser = await this.getUserName(this.currentUser);\n      if (existingUser != null) {\n          userFound = true;\n      }\n      /*await this.userService.GetUserByName(this.currentUser).subscribe(result => {\n          existingUser = result\n          console.log(\"1 \" + existingUser);\n          if (result != null) {\n              userFound = true;\n          }\n      });*/\n      console.log(\"Name: \"+existingUser.name);\n      if (userFound && (this.editUser.name == existingUser.name && this.currentUser.id != existingUser.id)) {\n          this.nameTaken = true;\n          console.log(\"name taken\")\n          return;\n      }\n      this.editUser.id = this.currentUser.id;\n      this.editUser.email = this.currentUser.email;\n      this.userService.UpdateUser(this.editUser).subscribe();\n      console.log(\"updated\");\n      this.currentUser.name = this.editUser.name;\n\n      this.toggleEdit();\n  }\n\n}\n","<div>\n  <button *ngIf=\"!editActive\" (click)=\"toggleEdit()\" >Edit</button>\n  <div *ngIf=\"!editActive\">\n  <div>\n    Username: {{currentUser.name}} \n  </div>\n  <div>\n    Email: {{currentUser.email}} \n  </div>\n  <button>Logout</button> \n  </div> \n  <div *ngIf=\"editActive\">\n    <input [(ngModel)]=\"editUser.name\" type=\"text\" name=\"username\" placeholder=\"Username\">\n      <div *ngIf=\"nameTaken\">\n        Username already taken\n      </div>\n    <button (click)=\"saveEdit(currentUser)\">Save</button>\n    \n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}